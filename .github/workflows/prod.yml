name: remote ssh command
on:
  push:
    branches:
      - main
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "20.x"
        cache: "yarn"
    
    - name: Dependencies installation
      run: yarn

    - name: Galacrypt decrypt
      run: yarn galacrypt use ${{ secrets.GALACRYPT_KEY }} && yarn galacrypt decrypt
    
    - name: Set up backend .env
      run: cp .env.prod .env

    - name: Build backend
      run: yarn build

    - name: Copy files via SCP
      uses: appleboy/scp-action@v0.1.2
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: 22
        source: "./deploy.zip"
        target: "/home/ubuntu/galaguerre/deploy.zip"
    
    - name: deploy
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        script: |
          cd ~/galaguerre
          mv old $(mktemp -du old_XXXXXXX) || echo "no very old version"
          mv build $(mktemp -du old_build_XXXXXXX) || echo "no old build version"
          unzip deploy.zip
          pm2 stop galaguerre || echo "galaguerre is not running"
          mv current old || echo "no old version"
          mv build current
          cd current
          node ace migration:run --force && pm2 start bin/server.js --name $PM2_NAME && pm2 save
